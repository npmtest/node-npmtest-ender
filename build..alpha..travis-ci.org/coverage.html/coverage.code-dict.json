{"/home/travis/build/npmtest/node-npmtest-ender/test.js":"/* istanbul instrument in package npmtest_ender */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ender/lib.npmtest_ender.js":"/* istanbul instrument in package npmtest_ender */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_ender = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_ender = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-ender/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-ender && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_ender */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_ender\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_ender.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_ender.rollup.js'] =\n            local.assetsDict['/assets.npmtest_ender.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_ender.__dirname +\n                    '/lib.npmtest_ender.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/main.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n/******************************************************************************\n * Main entry point for both executable and API usage of Ender. Performs five\n * basic functions:\n *   1) parses command line or API arguments\n *   2) finds the main executable module for the given command\n *   3) finds the associated output (console) module for the given command\n *   4) executes the module\n *   5) handles any errors, via a generic output module if needed\n */\n\nprocess.title = 'Ender'\n\nvar argsParser = require('./args-parser')\n\n\n    // public entry point can be used with a standard argv array or a string for API usage\n  , exec = function (argv, log, callback) {\n      var parseType = 'parse'\n        , options\n\n        , complete = function (err) {\n            if (err && log) {\n              var name = (err.name || 'Error').replace(/([a-z])([A-Z])/g, '$1 $2')\n\n              log.error('{red}{bold}' + name + ': {/bold}' + err.message + '{/red}')\n\n              if (options.debug) {\n                log.error(err.stack)\n                if (err.cause) log.error('Caused by:\\n' + err.cause.stack)\n\n              } else log.error('Run with --debug to see more information')\n            }\n\n            callback(err)\n          }\n\n      if (arguments.length < 3) {\n        callback = log\n        log = undefined\n      }\n\n      if (typeof argv == 'string') {\n        // for API use: ender.exec('ender <cmd>', cb)\n        argv = argv.split(/\\s/).slice(1)\n        parseType = 'parseClean' // parseClean knows there aren't 2 preceeding tokens\n      }\n\n      try {\n        options = argsParser[parseType](argv)\n        require('./commands/' + options.command).exec(options, log, complete)\n      } catch (ex) {\n        options = options || { debug: argv.indexOf('--debug') != -1 }\n        complete(ex)\n      }\n    }\n\nmodule.exports.exec = exec\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/args-parser.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar UnknownCommandError = require('./errors').UnknownCommandError\n  , UnknownOptionError  = require('./errors').UnknownOptionError\n\n    // the default array option to collect arguments for ('packages'), so all non\n    // --/- prefixed arguments will be sent to this list until we receive a --/-\n    // that is an 'Array' type.\n    // e.g. `ender build foo bar baz`, our 'command' is 'build', 'foo bar baz' are\n    // all collected into 'packages'. Whereas `ender build foo bar --sandbox foo baz`\n    // we get 'foo bar' in packages and 'foo baz' in 'sandbox'.\n  , defaultArray = 'packages'\n\n    //   --foo                    -f    [type]    [alternate cmd]\n  , options = [\n        ['packages'             , ''  , Array          ]\n      , ['output'               , 'o' , String         ]\n      , ['use'                  , 'u' , String         ]\n      , ['max'                  , ''  , Number         ]\n      , ['sandbox'              , ''  , Array          ]\n      , ['integrate'            , ''  , Array          ]\n      , ['silent'               , 's' , Boolean        ]\n      , ['help'                 , 'h' , Boolean , true ]\n      , ['debug'                , ''  , Boolean        ]\n      , ['version'              , 'v' , Boolean , true ]\n      , ['externs'              , ''  , Array          ]\n      , ['client-lib'           , ''  , String         ]\n      , ['module-lib'           , ''  , String         ]\n      , ['level'                , ''  , String         ]\n      , ['quiet'                , ''  , Boolean        ]\n      , ['force-install'        , ''  , Boolean        ]\n      , ['minifier'             , ''  , String         ]\n    ].map(function (item) {\n      return { name: item[0], short: item[1], type: item[2], command: item[3] }\n    })\n\n    // allowable first-arguments that resolve to commands\n  , commands = {\n        'help'    : 'help'\n      , 'build'   : 'build'\n      , 'add'     : 'add'\n      , 'set'     : 'add'\n      , 'refresh' : 'refresh'\n      , 'remove'  : 'remove'\n      , 'rm'      : 'remove'\n      , 'info'    : 'info'\n      , 'ls'      : 'info'\n      , 'list'    : 'info'\n      , 'search'  : 'search'\n      , 'compile' : 'compile'\n      , 'version' : 'version'\n    }\n\n  , findOption = function (s) {\n      var i\n        , option\n        , match = s.match(/^(--?)([a-z\\-]+)$/)\n\n      if (!match) return\n\n      for (i = 0; i < options.length; i++) {\n        var hasOption\n\n        option    = options[i]\n        hasOption = (match[1] === '--' && match[2] === option.name)\n          || (match[1] === '-' && option.short && match[2] === option.short)\n\n        if (hasOption) return option\n      }\n      throw new UnknownOptionError('Unknown option \"' + s + '\"')\n    }\n\n    // reverse a parse! Turn an `options` object into a parsable commandline string\n    // mainly so we can include it in the 'Build:' string in the source header but\n    // it has other uses.\n  , toContextString = function (options) {\n      var str = options.command\n        , p\n\n      if (options.packages.length) str += ' ' + options.packages.join(' ')\n\n      for (p in options) {\n        if (p === 'packages' || p === 'command') continue\n        str += ' --' + p\n        if (Array.isArray(options[p])) str += ' ' + options[p].join(' ')\n        else if (typeof options[p] !== 'boolean') str += ' ' + options[p]\n      }\n      return str\n    }\n\n  , parse = function (argv, slice, options) {\n      var args = Array.prototype.slice.call(argv, slice) // slice might be 0 for clean or 2 for raw\n        , options = options || {}\n        , currentArray\n        , arg\n        , o\n        , setCurrentArray = function (name) {\n            currentArray = name\n            options[currentArray] = options[currentArray]\n              ? Array.prototype.slice.call(options[currentArray], 0) // clone\n              : []\n          }\n\n      setCurrentArray(defaultArray)\n\n      while (arg = args.shift()) {\n        o = findOption(arg)\n        if (o) {\n          currentArray = defaultArray\n\n          if (o.type === Boolean) {\n            options[o.name] = true\n            if (o.command && !options.command) options.command = o.name\n          } else if ((o.type === String || o.type === Number) && args.length) {\n            // conversion through type constructor\n            options[o.name] = o.type(args.shift())\n          } else if (o.type === Array) {\n            setCurrentArray(o.name)\n          }\n\n        } else if (!options.command) {\n          options.command = arg\n        } else if (options[currentArray].indexOf(arg) == -1) {\n          options[currentArray].push(arg)\n        }\n      }\n\n      if (!options.command) {\n        if (Object.keys(options).length > 1) throw new UnknownCommandError('No command supplied')\n        options.command = 'help'\n      }\n\n      if (!commands[options.command]) throw new UnknownCommandError('Unknown command \"' + options.command + '\"')\n      options.command = commands[options.command]\n\n      return options\n    }\n\n    // merge two options objects together, for `add` and `remove`.\n  , extend = function (originalArgs, newArgs) {\n      return parse(toContextString(newArgs).split(' '), 1, originalArgs)\n    }\n\nmodule.exports = {\n    parse           : function (argv) { return parse(argv, 2) } // with 2 additional args 'node script.js'\n  , parseClean      : function (argv) { return parse(argv, 0) } // without\n  , extend          : extend\n  , toContextString : toContextString\n}\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/errors.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n/******************************************************************************\n * A collection of custom errors to return where we know the cause of the error\n * and can tell the user about it. Any error that is returned that isn't an\n * instance of EnderError has an unknown cause (the aim should be to wrap\n * everything in an EnderError type so we can explain the errors better).\n */\n\nvar errno                = require('errno')\n\n  , EnderError           = errno.custom.createError('EnderError')\n  , ArgumentParserError  = errno.custom.createError('ArgumentParserError', EnderError)\n  , InstallError         = errno.custom.createError('InstallError', EnderError)\n  , BuildError           = errno.custom.createError('BuildError', EnderError)\n  , PackageError         = errno.custom.createError('PackageError', EnderError)\n  , RepositoryError      = errno.custom.createError('RepositoryError', EnderError)\n  , CommandError         = errno.custom.createError('CommandError', EnderError)\n\nmodule.exports = {\n    FilesystemError        : errno.custom.FilesystemError\n  , JSONParseError         : errno.custom.createError('JSONParseError')\n\n  , EnderError             : EnderError\n\n  , ArgumentParserError    : ArgumentParserError\n  , UnknownCommandError    : errno.custom.createError('UnknownCommandError', ArgumentParserError)\n  , UnknownOptionError     : errno.custom.createError('UnknownOptionError', ArgumentParserError)\n\n  , InstallError           : InstallError\n  , DependencyLoopError    : errno.custom.createError('DependencyLoopError', InstallError)\n\n  , BuildError             : BuildError\n  , MinifyError            : errno.custom.createError('MinifyError', BuildError)\n  , TemplateError          : errno.custom.createError('TemplateError', BuildError)\n\n  , PackageError           : PackageError\n  , PackageNotFoundError   : errno.custom.createError('PackageNotFoundError', PackageError)\n  , PackageNotLocalError   : errno.custom.createError('PackageNotLocalError', PackageError)\n\n  , RepositoryError        : RepositoryError\n  , RepositorySetupError   : errno.custom.createError('RepositorySetupError', RepositoryError)\n  , RepositoryCommandError : errno.custom.createError('RepositoryCommandError', RepositoryError)\n\n  , CommandError           : CommandError\n  , BuildParseError        : errno.custom.createError('BuildParseError', CommandError)\n  , ChildProcessError      : errno.custom.createError('ChildProcessError', CommandError)\n  , CompressionError       : errno.custom.createError('CompressionError', CommandError)\n}\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/buster.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\nvar config = module.exports\n\nconfig['unit'] = {\n    environment: 'node'\n  , tests: [ 'test/unit/*-test.js', 'test/unit/commands/*-test.js' ]\n  , libs: [ 'test/common.js' ]\n}\n\nconfig['functional'] = {\n    environment: 'node'\n  , tests: [ 'test/functional/*-test.js' ]\n  , libs: [ 'test/common.js' ]\n}\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/assemble.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n/******************************************************************************\n * An interface to UglifyJS. Preserves copyright comments, which UglifyJS\n * currently doesn't do: https://github.com/mishoo/UglifyJS/issues/85\n */\n\nvar async         = require('async')\n  , fs            = require('fs')\n  , mu            = require('mu2')\n  , path          = require('path')\n\n  , argsParser    = require('./args-parser')\n  , vlq           = require('./vlq')\n\n  , TemplateError = require('./errors').TemplateError\n\n\n  , generateDefaultBridge = function (name) {\n      return (\n          \"m = require('\" + name + \"');\\n\"\n        + \"if (typeof(m) == 'function') $.ender({'\" + name + \"':m});\\n\"\n        + \"$.ender(m);\\n\"\n      )\n    }\n\n  , indentLines = function (str, spaces) {\n      return str && str.replace(/^/mg, Array(spaces+1).join(' '))\n    }\n\n  , assemble = function (buildName, sourceMapName, options, packages, callback) {\n      var templateData = {\n              buildName: buildName\n            , sourceMapName: sourceMapName\n            , context: argsParser.toContextString(options)\n            , packageList: []\n            , packages: []\n          }\n\n        , sourceIndex = 0\n        , sourceLine = 0\n        , sourceNames = []\n        , generateMappings = function (name, content, indent, inline) {\n            if (sourceNames.indexOf(name) == -1) sourceNames.push(name)\n\n            return content.replace(/^.*$(\\r\\n|\\r|\\n)?/mg, function (line, ending, offset) {\n              var firstLine = !offset\n                , sourceIndexDelta = (firstLine ? sourceNames.indexOf(name) - sourceIndex : 0)\n                , sourceLineDelta = (firstLine ? -sourceLine : 1)\n\n              if (!line.length) return ''\n\n              sourceIndex += sourceIndexDelta\n              sourceLine += sourceLineDelta\n\n              return (\n                vlq.encode(indent || 0) +                                     // Adjust for indent\n                vlq.encode(sourceIndexDelta) +                                // Set the source index\n                vlq.encode(sourceLineDelta) +                                 // Set the source line\n                vlq.encode(0) +                                               // Source column (always 0)\n                (ending ? ';' : '')                                           // Did we have a line ending?\n              )\n            })\n          }\n\n      packages.forEach(function (pkg) {\n        templateData.packageList.push(pkg.id)\n\n        // are we autointegrating this package?\n        if (!pkg.bridge && Array.isArray(options.integrate) && options.integrate.indexOf(pkg.name) != -1) {\n          pkg.sources.push({ name: 'bridge', content: generateDefaultBridge(pkg.name) })\n          pkg.bridge = 'bridge'\n        }\n\n        if (pkg.sources.length) {\n          var pkgData = {\n                  isBare: pkg.bare\n                , isExposed: pkg.bare\n\n                , name: pkg.name\n                , main: pkg.main\n                , bridge: pkg.bridge\n                , sources: []\n              }\n\n            , relativeRoot = path.relative('.', pkg.root)\n\n          // do we have a sandboxed build?\n          if (Array.isArray(options.sandbox)) {\n            pkgData.isExposed = (options.sandbox.indexOf(pkg.name) != -1)\n          }\n\n          pkg.sources.forEach(function (source, i) {\n            var indent = pkg.bare ? 2 : 6\n              , indentedContent = indentLines(source.content, indent)\n\n            // check if this is the bridge and we want to exclude it from the build\n            if (pkg.bare && !pkgData.isExposed && source.name == pkg.bridge) {\n              delete pkgData.bridge\n              return\n            }\n\n            pkgData.sources.push({\n                i: i\n              , name: source.name\n              , content: indentedContent\n              , mappings: generateMappings(path.join(relativeRoot, source.name + '.js'), source.content, indent)\n            })\n          })\n\n          templateData.packages.push(pkgData)\n        }\n      })\n\n      templateData.packageList = templateData.packageList.join(' ')\n      templateData.sourceList = JSON.stringify(sourceNames)\n\n      async.parallel({\n          build: function (callback) {\n            var source = ''\n            mu.compileAndRender('build.mustache', templateData)\n              .on('error', function (err) { callback(new TemplateError(err)) })\n              .on('data', function (data) { source += data })\n              .on('end', function () { callback(null, source) })\n          }\n\n        , sourceMap: function (callback) {\n            var sourceMap = ''\n            mu.compileAndRender('build.map.mustache', templateData)\n              .on('error', function (err) { callback(new TemplateError(err)) })\n              .on('data', function (data) { sourceMap += data })\n              .on('end', function () { callback(null, sourceMap) })\n          }\n      }, callback)\n    }\n\nmu.root = path.resolve(__dirname, '..', 'resources', 'assemble')\n\nmodule.exports = {\n    assemble: assemble\n}\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/vlq.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar VLQ_BITS = 5\n  , VLQ_BASE = 1 << VLQ_BITS\n  , VLQ_MASK = (1 << VLQ_BITS) - 1\n\n  , itob64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('')\n  , b64toi = {}  // This is initialized below\n\n  , toVLQ = function (val) { return val < 0 ? (-val << 1) | 1 : (val << 1) }\n  , fromVLQ = function (vlq) { return vlq & 1 ? -(vlq >>> 1) : (vlq >>> 1) }\n\n  , encode = function (val) {\n      var result = ''\n        , vlq = toVLQ(val)\n        , digit\n\n      do {\n        digit = vlq & VLQ_MASK      // Get the digit\n        vlq >>>= VLQ_BITS           // Shift off the digit\n        if (vlq) digit |= VLQ_BASE  // Set the continuation bit\n        result += itob64[digit]\n      } while (vlq > 0)\n\n      return result\n    }\n\n  , decode = function (vlqstr) {\n      var result = 0\n        , digit\n        , continuation\n        , i\n\n      for (i = 0, continuation = 1; continuation && i < vlqstr.length; i++) {\n        digit = b64toi[vlqstr[i]]\n        continuation = digit & VLQ_BASE    // Get the continuation bit\n        digit &= VLQ_MASK                  // Mask off the continuation bit\n        result += digit << (VLQ_BITS * i)  // Add the digit to the result\n      }\n\n      if (continuation && i == vlqstr.length) return NaN\n      return { value: fromVLQ(result), rest: vlqstr.slice(i) }\n    }\n\nitob64.forEach(function(v, i) {\n\tb64toi[v] = i;\n})\n\n\nmodule.exports = {\n    encode: encode\n  , decode: decode\n}\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/local-package.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\nvar extend          = require('util')._extend\n  , archy           = require('archy')\n  , async           = require('async')\n  , fs              = require('fs')\n  , glob            = require('glob')\n  , path            = require('path')\n  , semver          = require('semver')\n\n  , repository      = require('./repository')\n\n  , JSONParseError       = require('./errors').JSONParseError\n  , FilesystemError      = require('./errors').FilesystemError\n  , PackageNotFoundError = require('./errors').PackageNotFoundError\n  , PackageNotLocalError = require('./errors').PackageNotLocalError\n\n\n  , unitaryHash  = function () { return '_' }\n  , packageCache = {}\n  , packageMappings = {}\n\nfunction LocalPackage(root) {\n  this.root = root\n\n  // Memoize methods that hit the disk\n  this.loadDescriptor = async.memoize(this.loadDescriptor.bind(this), unitaryHash)\n  this.loadSources = async.memoize(this.loadSources.bind(this), unitaryHash)\n\n  return this\n}\n\n// Static Methods\nextend(LocalPackage, {\n    createPackage: function (root) {\n      root = path.resolve(root)\n      return packageCache[root] || (packageCache[root] = new LocalPackage(root))\n    }\n\n  , loadPackage: function (root, callback) {\n      var pkg = LocalPackage.createPackage(root)\n      pkg.loadDescriptor(function (err) {\n        if (err) return callback(err)\n        callback(null, pkg)\n      })\n    }\n\n  , unloadPackage: function (root) {\n      LocalPackage.createPackage(root).unload()\n\n      for (var key in packageMappings)\n        if (packageMappings[key] == root)\n          delete packageMappings[key]\n    }\n\n  , addPackageMapping: function (id, root) {\n      packageMappings[id] = root\n    }\n\n  , findPackage: function (id, root, callback) {\n      var name = repository.util.getName(id)\n        , version = repository.util.getVersion(id)\n        , nameType = repository.util.getNameType(name)\n        , matches = function (pkg) {\n            return (pkg &&\n                    (nameType == 'path' || pkg.originalName == name) &&\n                    semver.satisfies(pkg.version, version))\n          }\n\n      root = path.resolve(root)\n\n      // See if we've mapped this package id to a local package\n      if (id in packageMappings) {\n        name = packageMappings[id]\n        nameType = 'path'\n      }\n\n      switch (nameType) {\n        case 'path':\n          LocalPackage.loadPackage(name, function (err, pkg) {\n            if (matches(pkg)) return callback(null, pkg)\n            return callback(new PackageNotFoundError(\"Package at '\" + name + \"' does not satisfy version '\" + version + \"'.\"))\n          })\n          break\n\n        case 'package':\n          // Don't search above the CWD\n          if (/^\\.\\./.test(path.relative('.', root)))\n            return callback(new PackageNotFoundError(\"Package '\" + id + \"' could not be found.\"))\n\n          LocalPackage.loadPackage(root, function (err, pkg) {\n            if (matches(pkg)) return callback(null, pkg)\n\n            LocalPackage.loadPackage(repository.util.getChildRoot(name, root), function (err, pkg) {\n              if (matches(pkg)) return callback(null, pkg)\n\n              LocalPackage.findPackage(id, path.dirname(root), callback)\n            })\n          })\n          break\n\n        case 'tarball':\n        case 'url':\n        case 'git':\n        case 'github':\n          callback(new PackageNotLocalError('Can only find packages by path or name'))\n          break\n      }\n    }\n\n  , walkDependencies: function (ids, unique, strict, callback) {\n      var packages = []\n        , missing = []\n        , seenNames = []\n        , seenRoots = []\n\n        , processId = function (id, root, callback) {\n            LocalPackage.findPackage(id, root, function (err, pkg) {\n              if (err) {\n                if (strict) return callback(err)\n\n                missing.push(id)\n                return callback()\n              }\n\n              processPackage(pkg, callback)\n            })\n          }\n\n        , processPackage = function (pkg, callback) {\n            if (seenRoots.indexOf(pkg.root) != -1) return callback()\n            seenRoots.push(pkg.root)\n\n            async.map(\n                pkg.dependencies\n              , function (id, callback) { processId(id, pkg.root, callback) }\n              , function (err) {\n                  if (err) return callback(err)\n                  packages.push(pkg)\n                  seenNames.push(pkg.originalName)\n                  callback()\n              }\n            )\n          }\n\n      async.map(\n          ids\n        , function (id, callback) { processId(id, '.', callback) }\n        , function (err) {\n            if (err) return callback(err)\n\n            if (unique) {\n              // Return only the first package if we found multiple instances\n              packages = packages.filter(function (p, i) { return seenNames.indexOf(p.originalName) == i })\n              missing = missing.filter(function (n, i) { return missing.indexOf(n) == i })\n            }\n\n            callback(null, packages, missing)\n          }\n      )\n    }\n\n  , buildTree: function (ids, pretty, callback) {\n      var seenRoots = []\n\n        , processId = function (id, root, callback) {\n            LocalPackage.findPackage(id, root, function (err, dep) {\n              if (err) return callback(err)\n              processPackage(dep, callback)\n            })\n          }\n\n        , processPackage = function (pkg, callback) {\n            var node = {}\n              , first = seenRoots.indexOf(pkg.root) == -1\n\n            seenRoots.push(pkg.root)\n\n            if (pretty) {\n              if (first) {\n                node.label = '{yellow}' + pkg.name + '@' + pkg.version + '{/yellow}{white} - ' + pkg.description + '{/white}'\n              } else {\n                node.label = '{grey}' + pkg.name + '@' + pkg.version + ' - ' + pkg.description + '{/grey}'\n              }\n            } else {\n              node.label = pkg.name + '@' + pkg.version\n            }\n\n            async.map(\n                pkg.dependencies\n              , function (id, callback) { processId(id, pkg.root, callback) }\n              , function (err, nodes) {\n                if (err) return callback(err)\n                node.nodes = nodes\n                callback(null, node)\n              }\n            )\n          }\n\n      async.map(\n          ids\n        , function (id, callback) { processId(id, '.', callback) }\n        , function (err, nodes) {\n            if (err) return callback(err)\n\n            var archyTree = {\n                    label: 'Active packages:'\n                  , nodes: nodes\n                }\n\n            callback(null, archy(archyTree))\n          }\n      )\n    }\n\n  , extendDescriptor: function (descriptor) {\n      var overrides = ['bare', 'name', 'files', 'main', 'bridge', 'dependencies', 'devDependencies']\n        , newDescriptor = Object.create(descriptor) // original is available via Object.getPrototypeOf\n        , key\n\n      if (typeof descriptor.overlay == 'object' &&\n          typeof descriptor.overlay.ender == 'object') {\n        overrides.forEach(function (key) {\n          if (key in descriptor.overlay.ender) {\n            newDescriptor[key] = descriptor.overlay.ender[key]\n          }\n        })\n      }\n\n      if (descriptor.ender == 'noop') {\n        newDescriptor.ender = null\n\n      } else if (typeof descriptor.ender == 'string') {\n        newDescriptor.bridge = descriptor.ender\n\n      } else if (typeof descriptor.ender == 'object') {\n        overrides.forEach(function (key) {\n          if (key in descriptor.ender) {\n            newDescriptor[key] = descriptor.ender[key]\n          }\n        })\n      }\n\n      return newDescriptor\n    }\n})\n\n\nLocalPackage.prototype = {\n    unload: function () {\n      delete this.loadDescriptor.memo._\n      delete this.loadSources.memo._\n      delete this.descriptor\n      delete this.sources\n    }\n\n  , get originalName () {\n      return Object.getPrototypeOf(this.descriptor).name\n    }\n\n  , get id () {\n      return this.originalName + '@' + this.version\n    }\n\n  , get dependencies () {\n      return (\n          !this.descriptor.dependencies ? []\n        : Array.isArray(this.descriptor.dependencies) ? this.descriptor.dependencies\n        : Object.keys(this.descriptor.dependencies).map(function (name) {\n            var value = this.descriptor.dependencies[name]\n            return (semver.validRange(value) ? name + '@' + value : repository.util.normalizeName(value, this.root))\n          }.bind(this))\n      )\n    }\n\n  , extendOptions: function (options) {\n      var externs = this.descriptor && this.descriptor.externs\n        , root = this.root\n\n      if (externs) {\n        if (!Array.isArray(externs)) externs = [ externs ]\n        if (!options.externs) options.externs = []\n        options.externs = options.externs.concat(externs.map(function (e) {\n          return path.join(root, e)\n        }))\n      }\n    }\n\n  , loadDescriptor: function (callback) {\n      var descriptorPath = repository.util.getPackageDescriptor(this.root)\n\n      fs.readFile(descriptorPath, 'utf-8', function (err, data) {\n        if (err) return callback(new FilesystemError(err))\n\n        try {\n          data = JSON.parse(data)\n        } catch (err) {\n          return callback(new JSONParseError(err.message + ' [' + descriptorPath + ']', err))\n        }\n\n        this.descriptor = LocalPackage.extendDescriptor(data)\n        this.name = this.descriptor.name\n        this.version = this.descriptor.version || ''\n        this.description = this.descriptor.description || ''\n        this.bare = !!this.descriptor.bare\n\n        callback()\n      }.bind(this))\n    }\n\n  , loadSources: function (callback) {\n      var loadFile = async.memoize(function (file, callback) {\n            file = path.normalize(file)\n            fs.readFile(path.join(this.root, file), 'utf-8', function (err, content) {\n              if (err) return callback(new FilesystemError(err))\n              callback(null, { name: file.replace(/(\\.js)?$/, ''), content: content })\n            })\n          }.bind(this))\n\n        , expandGlob = async.memoize(function (file, callback) {\n            // use glob.Glob because it's easier to stub for tests\n            new glob.Glob(file, { cwd: this.root, root: this.root, nomount: true }, function (err, files) {\n              if (err) return callback(new FilesystemError(err))\n              callback(null, files)\n            })\n          }.bind(this))\n\n        , expandDirectory = async.memoize(function (file, callback) {\n            fs.stat(path.join(this.root, file), function (err, stats) {\n              if (err) return callback(new FilesystemError(err))\n              if (!stats.isDirectory()) return callback(null, [ file ])\n\n              fs.readdir(path.join(this.root, file), function (err, names) {\n                if (err) return callback(new FilesystemError(err))\n\n                var files = names.map(function (name) { return path.join(file, name) })\n                async.concat(files, expandDirectory, callback)\n              })\n            }.bind(this))\n          }.bind(this))\n\n        , contractDirectory = async.memoize(function (file, callback) {\n            fs.stat(path.join(this.root, file), function (err, stats) {\n              if (err) return callback(new FilesystemError(err))\n              if (stats.isDirectory()) return callback(null, [])\n              return callback(null, [ file ])\n            }.bind(this))\n          }.bind(this))\n\n        , loadModule = function (name, callback) {\n            var files = this.descriptor[name] || []\n            if (typeof files == 'string') files = [ files ]\n            if (!Array.isArray(files)) files = files['scripts'] || []\n\n            if (name == 'main' && !files.length) {\n              // default to index as the main module\n              files = [ 'index', 'index.js' ]\n            } else {\n              // add additional search paths\n              files = files.concat(files.map(function (file) { return file + '.js' }),\n                                   files.map(function (file) { return path.join(file, 'index.js') }))\n            }\n\n            async.waterfall([\n                function (callback)          { async.concat(files, expandGlob, callback) }\n              , function (files, callback)   { async.concat(files, contractDirectory, callback) }\n              , function (files, callback)   { async.map(files, loadFile, callback) }\n              , function (sources, callback) {\n                  if (sources.length > 1) {\n                    // If we have an array of files, combine them into one file\n                    sources = [{\n                        name: name\n                      , content: sources.map(function (s) { return s.content }).join('\\n\\n')\n                    }]\n                  }\n\n                  callback(null, sources)\n                }\n            ], callback)\n          }.bind(this)\n\n        , loadFiles = function (callback) {\n            var files = this.descriptor.files || []\n            if (typeof files == 'string') files = [ files ]\n            if (!Array.isArray(files)) files = files['scripts'] || []\n\n            async.waterfall([\n                function (callback)        { async.concat(files, expandGlob, callback) }\n              , function (files, callback) { async.concat(files, expandDirectory, callback) }\n              , function (files, callback) { callback(null, files.filter(function (f) { return /\\.js$/.test(f) }).sort()) }\n              , function (files, callback) { async.map(files, loadFile, callback) }\n            ], callback)\n          }.bind(this)\n\n      async.parallel(\n        {\n            main:   loadModule.bind(null, 'main')\n          , bridge: loadModule.bind(null, 'bridge')\n          , files:  loadFiles\n        },\n        function (err, results) {\n          if (err) return callback(err)\n\n          // concat the results and filter duplicates (this works on objects because loadFile is memoized)\n          this.sources = [].concat(results.main, results.bridge, results.files)\n          this.sources = this.sources.filter(function (source, i) { return this.sources.indexOf(source) == i}.bind(this))\n\n          // Set main and bridge to the resolved name\n          if (results.main.length) this.main = results.main[0].name\n          if (results.bridge.length) this.bridge = results.bridge[0].name\n\n          callback()\n        }.bind(this)\n      )\n    }\n}\n\nmodule.exports = LocalPackage\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/repository/index.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar Repository = {\n        setup:     require('./npm/setup')\n      , packup:    require('./npm/packup')\n      , search:    require('./npm/search')\n      , install:   require('./npm/install')\n      , uninstall: require('./npm/uninstall')\n    }\n\nmodule.exports = Object.create(Repository)\nmodule.exports.util = require('./npm/util')\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/repository/npm/setup.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar fs              = require('fs')\n  , npm             = require('npm')\n  , os              = require('os')\n  , path            = require('path')\n\n  , FilesystemError = require('../../errors').FilesystemError\n\n\n  , generateTempFile = function () {\n      this._sessionFile = path.join(os.tmpDir(), 'ender_npm_' + process.pid + '.' + (+new Date()))\n      return fs.createWriteStream(this._sessionFile, {flags: 'w', mode: '0644'})\n    }\n\n  , setup = function (callback) {\n      if (this._isSetup) return callback()\n\n      var streamError = false\n\n      try {\n        this._sessionStream = generateTempFile.call(this)\n      } catch (err) {\n        return callback(new FilesystemError(err))\n      }\n\n      this._sessionStream.on('error', function(err) {\n        callback(new FilesystemError(err))\n        streamError = true\n      })\n\n      // streams are the safest way to deal with npm, actual fds are now unreliable\n      // and since we have no real way to tell when npm is finished (the callbacks\n      // are triggered before it does its own cleanup) the best we can do is a\n      // destroySoon() on our stream.\n      var config = {\n            logstream : this._sessionStream\n          , outfd     : this._sessionStream\n        }\n\n      fs.mkdir('node_modules', (0777 & ~process.umask()), function (err) {\n        if (err && err.code != 'EEXIST') return callback(new FilesystemError(err))\n\n        npm.load(config, function (err) {\n          if (!err && !streamError) this._isSetup = true\n          callback.apply(null, arguments)\n        }.bind(this))\n      }.bind(this))\n    }\n\nmodule.exports = setup\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/repository/npm/packup.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar fs = require('fs')\n\n\n  , packup = function (wasError, callback) { // callback is optional here, usually not required\n      if (!this._isSetup) return callback && callback()\n\n      this._isSetup = false\n\n      // gently close so we don't upset npm\n      this._sessionStream.on('close', function () {\n        if (!wasError) return fs.unlink(this._sessionFile, callback)\n        callback && callback()\n        this._sessionStream = null\n      }.bind(this))\n\n      this._sessionStream.destroySoon()\n    }\n\nmodule.exports = packup\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/repository/npm/search.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar npm                    = require('npm')\n\n  , RepositorySetupError   = require('../../errors').RepositorySetupError\n  , RepositoryCommandError = require('../../errors').RepositoryCommandError\n\n\n  , search = function (keywords, callback) {\n      if (!this._isSetup) throw new RepositorySetupError('repository.setup() has not been called')\n\n      npm.commands.search(keywords, true, function (err) {\n        if (err) return callback(new RepositoryCommandError(err))\n        callback.apply(null, arguments)\n      })\n    }\n\nmodule.exports = search\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/repository/npm/install.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar npm  = require('npm')\n  , path = require('path')\n\n  , util = require('./util')\n\n  , RepositorySetupError   = require('../../errors').RepositorySetupError\n  , RepositoryCommandError = require('../../errors').RepositoryCommandError\n\n\n  , install = function (packages, callback) {\n      if (!this._isSetup) throw new RepositorySetupError('repository.setup() has not been called')\n\n      npm.commands.install(packages, function (err, receipts) {\n        if (err) return callback(new RepositoryCommandError(err))\n        callback(null, receipts.map(function (r) {\n          return {\n              id: r[0]\n            , root: path.resolve(r[1])\n            , source: util.normalizeName(r[4])\n          }\n        }))\n      })\n    }\n\nmodule.exports = install\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/repository/npm/util.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar fs     = require('fs')\n  , path   = require('path')\n\n  , FilesystemError = require('../../errors').FilesystemError\n\n\n  , tarballRegExp = /.tgz$/\n  , pathRegExp = /^(\\.|\\/|\\w:\\\\)/\n  , gitRegExp = /^git(\\+(ssh|https?))?:/\n  , urlRegExp = /^https?:/\n  , gitHubRegExp = /\\//\n\n  , getName    = function (id) { return id.split('@')[0] }\n  , getVersion = function (id) { return id.split('@')[1] || ''}\n\n  , isTarball = function (name) { return pathRegExp.test(name) && tarballRegExp.test(name) }\n  , isUrl     = function (name) { return urlRegExp.test(name) }\n  , isPath    = function (name) { return pathRegExp.test(name) }\n  , isGit     = function (name) { return gitRegExp.test(name) }\n  , isGitHub  = function (name) { return gitHubRegExp.test(name) }\n\n  , getNameType = function (name) {\n      return (\n          isTarball(name) ? 'tarball'\n        : isUrl(name)     ? 'url'\n        : isPath(name)    ? 'path'\n        : isGit(name)     ? 'git'\n        : isGitHub(name)  ? 'github'\n        : 'package'\n      )\n    }\n\n  , normalizeName = function (name, parentRoot) {\n      switch (getNameType(name)) {\n        case 'path'   : return path.resolve(parentRoot || '.', name)\n        case 'github' : return 'git://github.com/' + name\n        default       : return name\n      }\n    }\n\n  , getChildRoot = function (name, parentRoot) {\n      return path.resolve(parentRoot || '.', 'node_modules', name)\n    }\n\n  , getPackageDescriptor = function (root) {\n      return path.join(root, 'package.json')\n    }\n\n\nmodule.exports = {\n    getName              : getName\n  , getVersion           : getVersion\n  , getNameType          : getNameType\n  , normalizeName        : normalizeName\n  , getChildRoot         : getChildRoot\n  , getPackageDescriptor : getPackageDescriptor\n}\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/repository/npm/uninstall.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar npm                    = require('npm')\n\n  , RepositorySetupError   = require('../../errors').RepositorySetupError\n  , RepositoryCommandError = require('../../errors').RepositoryCommandError\n\n\n  , uninstall = function (packages, callback) {\n      if (!this._isSetup) throw new RepositorySetupError('repository.setup() has not been called')\n\n      npm.commands.uninstall(packages, function (err) {\n        if (err) return callback(new RepositoryCommandError(err))\n        callback.apply(null, arguments)\n      })\n    }\n\nmodule.exports = uninstall\n","/home/travis/build/npmtest/node-npmtest-ender/node_modules/ender/lib/util.js":"/*!\n * ENDER - The open module JavaScript framework\n *\n * Copyright (c) 2011-2012 @ded, @fat, @rvagg and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar fs              = require('fs')\n  , sysUtil         = require('util')\n  , tty             = require('tty')\n\n  , argsParser      = require('./args-parser')\n\n  , FilesystemError = require('./errors').FilesystemError\n  , BuildParseError = require('./errors').BuildParseError\n\n\n    // 'Packages:' is optional because it's not in <= 0.8.x Ender builds\n  , buildInfoRegex  = /\\n {2}\\* Build: ender ([^\\n]*)\\s\\S*(?:(?: {2}\\* Packages: )([^\\n]*))?/\n  , defaultClientLib = 'ender-core'\n  , defaultModuleLib = 'ender-commonjs'\n\n  , getCorePackages = function (options) {\n      var corePackages = []\n\n      if (options['client-lib'] != 'none')\n        corePackages.push(options['client-lib'] || defaultClientLib)\n\n      if (options['module-lib'] != 'none')\n        corePackages.push(options['module-lib'] || defaultModuleLib)\n\n      return corePackages\n    }\n\n  , packageList = function (options) {\n      var ids = options.packages && options.packages.length ? options.packages : [ '.' ]\n      return getCorePackages(options).concat(ids)\n    }\n\n    // for --use <file>\n  , getInputFilenameFromOptions = function (options) {\n      return options.use ? options.use.replace(/(\\.js)?$/, '.js') : 'ender.js'\n    }\n\n  , parseContext = function (file, callback) {\n      fs.open(file, 'r', function (err, fd) {\n        if (err) return callback(new FilesystemError(err))\n\n        var buffer = new Buffer(2048)\n        fs.read(fd, buffer, 0, 2048, null, function (err, bytesRead, buffer) {\n          if (err) return callback(new FilesystemError(err))\n\n          fs.close(fd, function () {\n            // err? who cares, we have our data, let's use it and run for the hills!\n            var options\n              , error\n              , match = String(buffer).match(buildInfoRegex)\n\n            if (!match) {\n              error = 'Could not parse ender spec from \"' + file + '\" (not an Ender build file?)'\n              return callback(new BuildParseError(error))\n            }\n\n            try {\n              options = argsParser.parseClean(match[1].split(' '))\n            } catch (ex) {\n              error = 'Could not parse ender spec from \"' + file + '\"'\n              return callback(new BuildParseError(error, ex))\n            }\n\n            callback(null, {\n                options  : options\n              , packages : match[2] && match[2].split(' ')\n            })\n          })\n        })\n      })\n    }\n\n  , toKb = function (size) {\n      size = Math.round(size / 1024 * 10) / 10\n      return size + ' kB'\n    }\n\n  , styles = {\n        'bold':      ['\\033[1m', '\\033[22m']\n      , 'italic':    ['\\033[3m', '\\033[23m']\n      , 'underline': ['\\033[4m', '\\033[24m']\n      , 'inverse':   ['\\033[7m', '\\033[27m']\n      , 'black':     ['\\033[30m', '\\033[39m']\n      , 'red':       ['\\033[31m', '\\033[39m']\n      , 'green':     ['\\033[32m', '\\033[39m']\n      , 'yellow':    ['\\033[33m', '\\033[39m']\n      , 'blue':      ['\\033[34m', '\\033[39m']\n      , 'magenta':   ['\\033[35m', '\\033[39m']\n      , 'cyan':      ['\\033[36m', '\\033[39m']\n      , 'white':     ['\\033[37m', '\\033[39m']\n      , 'default':   ['\\033[39m', '\\033[39m']\n      , 'grey':      ['\\033[90m', '\\033[39m']\n      , 'bgBlack':   ['\\033[40m', '\\033[49m']\n      , 'bgRed':     ['\\033[41m', '\\033[49m']\n      , 'bgGreen':   ['\\033[42m', '\\033[49m']\n      , 'bgYellow':  ['\\033[43m', '\\033[49m']\n      , 'bgBlue':    ['\\033[44m', '\\033[49m']\n      , 'bgMagenta': ['\\033[45m', '\\033[49m']\n      , 'bgCyan':    ['\\033[46m', '\\033[49m']\n      , 'bgWhite':   ['\\033[47m', '\\033[49m']\n      , 'bgDefault': ['\\033[49m', '\\033[49m']\n    }\n\n  , tagPattern = /\\{([^}\\s]+)\\}([\\S\\s]*?)\\{\\/\\1\\}/g\n  , renderTemplate = function (template) {\n      return template.replace(tagPattern, function (all, tag, content) {\n        content = renderTemplate(content)\n\n        if (!(tag in styles)) return '{' + tag + '}' + content + '{/' + tag + '}'\n        else if (tty.isatty(1)) return styles[tag][0] + content + styles[tag][1]\n        else return content\n      })\n    }\n\n  , defaultLogger = {\n        info   : function (template) { console.log(renderTemplate(template)) }\n      , warn   : function (template) { console.log(renderTemplate(template)) }\n      , error  : function (template) { console.log(renderTemplate(template)) }\n    }\n\n\nmodule.exports = parseContext\n\nmodule.exports = {\n    getCorePackages              : getCorePackages\n  , packageList                  : packageList\n  , getInputFilenameFromOptions  : getInputFilenameFromOptions\n  , parseContext                 : parseContext\n  , toKb                         : toKb\n  , defaultLogger                : defaultLogger\n}\n"}